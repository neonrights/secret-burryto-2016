<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create some variables
width = 240;
height = 120;
padding = 8;
alpha = 0.5;
delay = 0;

// Keep track of the starting line
start = ds_list_create();
ds_list_add( start, 0 );

// Keep track of the last space and current position
count = 0;
last_space = 0;
line = 0;

// Set the message

message = "Beginning of message log";
str = "";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &lt; 0) {
    x = 0;
}

if (y &lt; 0) {
    y = 0;
}

/*if (obj_player.x &gt; 300) {
    x = obj_player.x - 300;
}

if (obj_player.y &gt; 200) {
    y = obj_player.y - 200;
}*/

x = view_xview[0];
y = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroy the ds_list
ds_list_destroy( start );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the string and the box

draw_set_alpha( alpha );
draw_roundrect_color( x, y, x+width, y+height, c_black, c_black, false );
draw_set_alpha( 1 );

// Set the color to white
draw_set_color( c_white );

// Check if string exceeds width, and insert line break. Must be before getting last_space variable
if ( string_width(str) &gt; (width - (2*padding)) ) {
    //Remove the space and replace it with a line break
    message = string_delete( message, last_space, 1 );
    message = string_insert( "#", message, last_space );
    ds_list_add( start, last_space+1 );
}


if ( count &lt; string_length( message ) + 1 ) { // Make sure we have not reached the end of the message
    alpha = 0.5; // Set the alpha back to 0.5
    delay = 0;
    
    //Are we at a space? Set the last space variable
    if (string_char_at( message, count ) == " ") {
        last_space = count;
    }
    
    //Is there a manual line break? Add it to the ds_list
    if (string_char_at( message, count ) == "#") {
        ds_list_add (start, count+1);
    }
    
    // Increment count in order to roll through the message
    count++;
}
else if( alpha &gt; 0 ) { //The end of the message, fade out
    if( delay &lt; 250 ) {
        delay++;
    }
    else {
        alpha -= 0.005
    }
    if( alpha = 0 ) {
        delay = 0;
    }
}

// Did we got past the bottom? Move up a line
if ( string_height( str ) &gt; height-padding ) {
    line++;
}

// Grab the string
str = string_copy( message, ds_list_find_value(start, line), count-ds_list_find_value( start, line ) );

// Draw the text
draw_set_alpha( alpha*2 );
draw_text( x+padding, y+padding, str );
draw_set_alpha( 1 )
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
